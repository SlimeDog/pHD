messages:
  hologram-not-found: "Hologram not found: {name}"
  type-not-recognized: "This type for a periodic hologram was not recognized: {type}"
  need-a-number: "Expected a number, got {msg}"
  adopted-periodic: "Adopted the periodic hologram '{name}'. It'll be displayed for {time}s no more often than {delay}"
  adopted-once: "Adopted the once activated hologram '{name}'. It'll be displayed for {time}s on first encounter"
  adopted-everytime: "Adopted the hologram '{name}'. It'll be displayed for {time}s on every encounter"
  adopted-ntimes: "Adopted the hologram '{name}'. It'll be displayed {times} to each player for {time}s"
  adopted-onjoin: "Adopted the hologram '{name}'. It'll be displayed when a player joins and gets into range for {time}s"
  need-a-player: "Only a player can use this command!"
  created-periodic: "Created the periodic hologram '{name}'. It'll be displayed for {time}s no more often than {delay}"
  created-once: "Created the once activated hologram '{name}'. It'll be displayed for {time}s on first encounter"
  created-everytime: "Created the hologram '{name}'. It'll be displayed for {time}s on every encounter"
  created-ntimes: "Created the hologram '{name}'. It'll be displayed {times} to each player for {time}s"
  created-onjoin: "Created the hologram '{name}'. It'll be displayed when a player joins and gets into range for {time}s"
  world-not-found: "World not found: {name}"
  hologram-info: "A hologram named '{name}':\nWorld: {world}\nType:{type}\nShowTime:{time}s\nTypeInfo:{typeinfo}"
  typeinfo:
    PERIODIC: "{delay} delay, on cooldown: {players}"
    ONCE: "Shown to: {players}"
    EVERYTIME: "N/A"
    NTIMES: "Shown to: {players:times}"
    ONJOIN: "Shown to: {players}"